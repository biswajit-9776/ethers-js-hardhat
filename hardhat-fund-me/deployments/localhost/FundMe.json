{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prideFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "USD_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "key",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "getFundersList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_fundedList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xef9f61359f36e85460eae279f5355033ba0f18f3614acee6e33d70f73ff59e09",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1077935",
    "logsBloom": "0x
    "blockHash": "0xa39f418ee3ea528962a4cd31b7e3df8e5217096c2a6c980c513f437842345ced",
    "transactionHash": "0xef9f61359f36e85460eae279f5355033ba0f18f3614acee6e33d70f73ff59e09",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1077935",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "b6c0eee6bda1090bfcab3dfecf97fc58",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prideFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"USD_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"getFundersList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_fundedList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    address private immutable i_owner;\\n    address[] public s_fundedList;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    uint256 public constant USD_MINIMUM = 50 * 1e18;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Only owner can withdraw\\\");\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address prideFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(prideFeedAddress);\\n    }\\n\\n    // In Solidity, a function marked as external:\\n    // Can be called from outside the contract (e.g., by a transaction or another contract).\\n    // Cannot be called internally from within the same contract without this. or address(this).call().\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= USD_MINIMUM,\\n            \\\"Not enough funds\\\"\\n        );\\n        s_fundedList.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // bool success = payable(msg.sender).send(address(this).balance);\\n        // require(success, \\\"Unable to withdraw funds\\\");\\n\\n        (bool sendSuccess, ) = i_owner.call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(sendSuccess, \\\"Error occured in withdrawing funds\\\");\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_fundedList.length;\\n            funderIndex++\\n        ) {\\n            s_addressToAmountFunded[s_fundedList[funderIndex]] = 0;\\n        }\\n        s_fundedList = new address[](0);\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_fundedList;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            s_addressToAmountFunded[funders[funderIndex]] = 0;\\n        }\\n        s_fundedList = new address[](0);\\n\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // bool success = payable(msg.sender).send(address(this).balance);\\n        // require(success, \\\"Unable to withdraw funds\\\");\\n\\n        (bool sendSuccess, ) = i_owner.call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(sendSuccess, \\\"Error occured in withdrawing funds\\\");\\n\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return PriceConverter.getVersion(s_priceFeed);\\n    }\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n    function getAddressToAmountFunded(address key) public view returns (uint256) {\\n        return s_addressToAmountFunded[key];\\n    }\\n    function getFundersList(uint256 value) public view returns (address){\\n        return s_fundedList[value];\\n    }\\n}\\n\",\"keccak256\":\"0x137b2f6567390184d986caa4e9c2f536ab677df693f2990d8583fd3e78aec714\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getVersion(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 value,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 price = getPrice(priceFeed);\\n        return (price * value) / 1e18;\\n    }\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n}\\n\",\"keccak256\":\"0xbe74d9b22fc6c9ad5570562b2c6ba981c1f736be15d5cf0281610e8256ef03b6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516113963803806113968339818101604052810190610032919061010f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b608051611223610173600039600081816103fd0152818161048401528181610654015281816106eb01526108d601526112236000f3fe6080604052600436106100955760003560e01c806389b99dcc1161005957806389b99dcc146101835780639e87a5cd146101c0578063b60d4288146101eb578063be2693f0146101f5578063d6e4940b146101ff576100a4565b80630343fb25146100ae5780630d8e6e2c146100eb578063173fa47a146101165780633ccfd60b14610141578063893d20e814610158576100a4565b366100a4576100a261023c565b005b6100ac61023c565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610c2a565b610375565b6040516100e29190610c70565b60405180910390f35b3480156100f757600080fd5b506101006103be565b60405161010d9190610c70565b60405180910390f35b34801561012257600080fd5b5061012b6103ee565b6040516101389190610c70565b60405180910390f35b34801561014d57600080fd5b506101566103fb565b005b34801561016457600080fd5b5061016d610650565b60405161017a9190610c9a565b60405180910390f35b34801561018f57600080fd5b506101aa60048036038101906101a59190610ce1565b610678565b6040516101b79190610c9a565b60405180910390f35b3480156101cc57600080fd5b506101d56106c0565b6040516101e29190610d6d565b60405180910390f35b6101f361023c565b005b6101fd6106e9565b005b34801561020b57600080fd5b5061022660048036038101906102219190610ce1565b6109a2565b6040516102339190610c9a565b60405180910390f35b6802b5e3af16b188000061027960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109e190919063ffffffff16565b10156102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b190610de5565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036c9190610e34565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006103e960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610a17565b905090565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610480576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104c690610e99565b60006040518083038185875af1925050503d8060008114610503576040519150601f19603f3d011682016040523d82523d6000602084013e610508565b606091505b505090508061054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054390610f20565b60405180910390fd5b60005b6001805490508110156105ec576000600260006001848154811061057657610575610f40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808060010191505061054f565b50600067ffffffffffffffff81111561060857610607610f6f565b5b6040519080825280602002602001820160405280156106365781602001602082028036833780820191505090505b506001908051906020019061064c929190610b20565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006001828154811061068e5761068d610f40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107f257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107a8575b5050505050905060005b81518110156108715760006002600084848151811061081e5761081d610f40565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506107fc565b50600067ffffffffffffffff81111561088d5761088c610f6f565b5b6040519080825280602002602001820160405280156108bb5781602001602082028036833780820191505090505b50600190805190602001906108d1929190610b20565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161091890610e99565b60006040518083038185875af1925050503d8060008114610955576040519150601f19603f3d011682016040523d82523d6000602084013e61095a565b606091505b505090508061099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099590610f20565b60405180910390fd5b5050565b600181815481106109b257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806109ed83610a8f565b9050670de0b6b3a76400008482610a049190610f9e565b610a0e919061100f565b91505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611055565b9050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906110fa565b5050509150506402540be40081610b189190611175565b915050919050565b828054828255906000526020600020908101928215610b99579160200282015b82811115610b985782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b40565b5b509050610ba69190610baa565b5090565b5b80821115610bc3576000816000905550600101610bab565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf782610bcc565b9050919050565b610c0781610bec565b8114610c1257600080fd5b50565b600081359050610c2481610bfe565b92915050565b600060208284031215610c4057610c3f610bc7565b5b6000610c4e84828501610c15565b91505092915050565b6000819050919050565b610c6a81610c57565b82525050565b6000602082019050610c856000830184610c61565b92915050565b610c9481610bec565b82525050565b6000602082019050610caf6000830184610c8b565b92915050565b610cbe81610c57565b8114610cc957600080fd5b50565b600081359050610cdb81610cb5565b92915050565b600060208284031215610cf757610cf6610bc7565b5b6000610d0584828501610ccc565b91505092915050565b6000819050919050565b6000610d33610d2e610d2984610bcc565b610d0e565b610bcc565b9050919050565b6000610d4582610d18565b9050919050565b6000610d5782610d3a565b9050919050565b610d6781610d4c565b82525050565b6000602082019050610d826000830184610d5e565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b6000610dcf601083610d88565b9150610dda82610d99565b602082019050919050565b60006020820190508181036000830152610dfe81610dc2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3f82610c57565b9150610e4a83610c57565b9250828201905080821115610e6257610e61610e05565b5b92915050565b600081905092915050565b50565b6000610e83600083610e68565b9150610e8e82610e73565b600082019050919050565b6000610ea482610e76565b9150819050919050565b7f4572726f72206f63637572656420696e207769746864726177696e672066756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f0a602283610d88565b9150610f1582610eae565b604082019050919050565b60006020820190508181036000830152610f3981610efd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610fa982610c57565b9150610fb483610c57565b9250828202610fc281610c57565b91508282048414831517610fd957610fd8610e05565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061101a82610c57565b915061102583610c57565b92508261103557611034610fe0565b5b828204905092915050565b60008151905061104f81610cb5565b92915050565b60006020828403121561106b5761106a610bc7565b5b600061107984828501611040565b91505092915050565b600069ffffffffffffffffffff82169050919050565b6110a181611082565b81146110ac57600080fd5b50565b6000815190506110be81611098565b92915050565b6000819050919050565b6110d7816110c4565b81146110e257600080fd5b50565b6000815190506110f4816110ce565b92915050565b600080600080600060a0868803121561111657611115610bc7565b5b6000611124888289016110af565b9550506020611135888289016110e5565b945050604061114688828901611040565b935050606061115788828901611040565b9250506080611168888289016110af565b9150509295509295909350565b6000611180826110c4565b915061118b836110c4565b9250828202611199816110c4565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156111d1576111d0610e05565b5b82820584148315176111e6576111e5610e05565b5b509291505056fea2646970667358221220ae148c45cd03b8b1831b1ed445d6580bb8532f17028773584b7034b885fa3a2164736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c806389b99dcc1161005957806389b99dcc146101835780639e87a5cd146101c0578063b60d4288146101eb578063be2693f0146101f5578063d6e4940b146101ff576100a4565b80630343fb25146100ae5780630d8e6e2c146100eb578063173fa47a146101165780633ccfd60b14610141578063893d20e814610158576100a4565b366100a4576100a261023c565b005b6100ac61023c565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610c2a565b610375565b6040516100e29190610c70565b60405180910390f35b3480156100f757600080fd5b506101006103be565b60405161010d9190610c70565b60405180910390f35b34801561012257600080fd5b5061012b6103ee565b6040516101389190610c70565b60405180910390f35b34801561014d57600080fd5b506101566103fb565b005b34801561016457600080fd5b5061016d610650565b60405161017a9190610c9a565b60405180910390f35b34801561018f57600080fd5b506101aa60048036038101906101a59190610ce1565b610678565b6040516101b79190610c9a565b60405180910390f35b3480156101cc57600080fd5b506101d56106c0565b6040516101e29190610d6d565b60405180910390f35b6101f361023c565b005b6101fd6106e9565b005b34801561020b57600080fd5b5061022660048036038101906102219190610ce1565b6109a2565b6040516102339190610c9a565b60405180910390f35b6802b5e3af16b188000061027960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109e190919063ffffffff16565b10156102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b190610de5565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036c9190610e34565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006103e960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610a17565b905090565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610480576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104c690610e99565b60006040518083038185875af1925050503d8060008114610503576040519150601f19603f3d011682016040523d82523d6000602084013e610508565b606091505b505090508061054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054390610f20565b60405180910390fd5b60005b6001805490508110156105ec576000600260006001848154811061057657610575610f40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808060010191505061054f565b50600067ffffffffffffffff81111561060857610607610f6f565b5b6040519080825280602002602001820160405280156106365781602001602082028036833780820191505090505b506001908051906020019061064c929190610b20565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006001828154811061068e5761068d610f40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107f257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107a8575b5050505050905060005b81518110156108715760006002600084848151811061081e5761081d610f40565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506107fc565b50600067ffffffffffffffff81111561088d5761088c610f6f565b5b6040519080825280602002602001820160405280156108bb5781602001602082028036833780820191505090505b50600190805190602001906108d1929190610b20565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161091890610e99565b60006040518083038185875af1925050503d8060008114610955576040519150601f19603f3d011682016040523d82523d6000602084013e61095a565b606091505b505090508061099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099590610f20565b60405180910390fd5b5050565b600181815481106109b257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806109ed83610a8f565b9050670de0b6b3a76400008482610a049190610f9e565b610a0e919061100f565b91505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611055565b9050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906110fa565b5050509150506402540be40081610b189190611175565b915050919050565b828054828255906000526020600020908101928215610b99579160200282015b82811115610b985782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b40565b5b509050610ba69190610baa565b5090565b5b80821115610bc3576000816000905550600101610bab565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf782610bcc565b9050919050565b610c0781610bec565b8114610c1257600080fd5b50565b600081359050610c2481610bfe565b92915050565b600060208284031215610c4057610c3f610bc7565b5b6000610c4e84828501610c15565b91505092915050565b6000819050919050565b610c6a81610c57565b82525050565b6000602082019050610c856000830184610c61565b92915050565b610c9481610bec565b82525050565b6000602082019050610caf6000830184610c8b565b92915050565b610cbe81610c57565b8114610cc957600080fd5b50565b600081359050610cdb81610cb5565b92915050565b600060208284031215610cf757610cf6610bc7565b5b6000610d0584828501610ccc565b91505092915050565b6000819050919050565b6000610d33610d2e610d2984610bcc565b610d0e565b610bcc565b9050919050565b6000610d4582610d18565b9050919050565b6000610d5782610d3a565b9050919050565b610d6781610d4c565b82525050565b6000602082019050610d826000830184610d5e565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b6000610dcf601083610d88565b9150610dda82610d99565b602082019050919050565b60006020820190508181036000830152610dfe81610dc2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3f82610c57565b9150610e4a83610c57565b9250828201905080821115610e6257610e61610e05565b5b92915050565b600081905092915050565b50565b6000610e83600083610e68565b9150610e8e82610e73565b600082019050919050565b6000610ea482610e76565b9150819050919050565b7f4572726f72206f63637572656420696e207769746864726177696e672066756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f0a602283610d88565b9150610f1582610eae565b604082019050919050565b60006020820190508181036000830152610f3981610efd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610fa982610c57565b9150610fb483610c57565b9250828202610fc281610c57565b91508282048414831517610fd957610fd8610e05565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061101a82610c57565b915061102583610c57565b92508261103557611034610fe0565b5b828204905092915050565b60008151905061104f81610cb5565b92915050565b60006020828403121561106b5761106a610bc7565b5b600061107984828501611040565b91505092915050565b600069ffffffffffffffffffff82169050919050565b6110a181611082565b81146110ac57600080fd5b50565b6000815190506110be81611098565b92915050565b6000819050919050565b6110d7816110c4565b81146110e257600080fd5b50565b6000815190506110f4816110ce565b92915050565b600080600080600060a0868803121561111657611115610bc7565b5b6000611124888289016110af565b9550506020611135888289016110e5565b945050604061114688828901611040565b935050606061115788828901611040565b9250506080611168888289016110af565b9150509295509295909350565b6000611180826110c4565b915061118b836110c4565b9250828202611199816110c4565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156111d1576111d0610e05565b5b82820584148315176111e6576111e5610e05565b5b509291505056fea2646970667358221220ae148c45cd03b8b1831b1ed445d6580bb8532f17028773584b7034b885fa3a2164736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_fundedList",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}